
#создайте функцию task_1(), в теле функции: i. создайте 5 разных переменных с произвольным названием. ii. у каждой укажите тип, типы следующие 1. int, float, str, list, bool iii. заполните переменные произвольными значениями, с соответствующим для каждой типом iv. выведите тип данных каждой в консоль. b. в функцию добавьте аннотацию возвращаемых данных c. добавьте вызов функции
def task_1() -> None:
    is_integer: int = 10
    is_float: float = 15.5
    is_string: str = 'Test'
    is_list: list = [1, 2, 3, 'Test']
    is_bool: bool = True
    print(type(is_integer))
    print(type(is_float))
    print(type(is_string))
    print(type(is_list))
    print(type(is_bool))

#Задача 2. a. создайте функцию task_2(), в теле функции: i. есть список a = [1, 2, 3, 5, 8, 13, 21] ii. выведите в консоль первые 3 значения списка b. в функцию добавьте аннотацию возвращаемых данных c. добавьте вызов функции.
def task_2() -> list:
    a = [1, 2, 3, 5, 8, 13, 21]
    print(a[0:3])

#a. напишите функцию task_3(), которая принимает число и возвращает квадрат этого числа. b. пропишите аннотации для функции и аргумента c. распечатайте в консоль вызов функции
def task_3(a: int) -> int:
    return a*a


task_1()            #Задача 1. Создайте функцию task_1(), в теле функции: i. создайте 5 разных переменных с произвольным названием. ii. у каждой укажите тип, типы следующие 1. int, float, str, list, bool iii. заполните переменные произвольными значениями, с соответствующим для каждой типом iv. выведите тип данных каждой в консоль. b. в функцию добавьте аннотацию возвращаемых данных c. добавьте вызов функции
task_2()            #Задача 2. a. создайте функцию task_2(), в теле функции: i. есть список a = [1, 2, 3, 5, 8, 13, 21] ii. выведите в консоль первые 3 значения списка b. в функцию добавьте аннотацию возвращаемых данных c. добавьте вызов функции.
print(task_3(3))    #Задача 3. a. напишите функцию task_3(), которая принимает число и возвращает квадрат этого числа. b. пропишите аннотации для функции и аргумента c. распечатайте в консоль вызов функции
